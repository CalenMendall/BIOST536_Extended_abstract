xlim(c(0,2.5))+
theme_dark()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs( x= 'POR')+
facet_wrap(~Sample )
ggplot(tmp, aes(x= OR, y=power,
colour = factor(ne_prev)))+
#geom_line(y = 0.8, col='black')+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs( x= 'POR')+
facet_wrap(~Sample )
ggplot(tmp, aes(x= OR, y=power,
colour = factor(ne_prev)))+
#geom_line(y = 0.8, col='black')+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs( x= 'POR', size =12)+
facet_wrap(~Sample )
ggplot(tmp, aes(x= OR, y=power,
colour = factor(ne_prev)))+
#geom_line(y = 0.8, col='black')+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs( x= 'POR', size =20)+
facet_wrap(~Sample )
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR')+
facet_wrap(~Sample )
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 10))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 15))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 12))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 12),
axis.title.x = element_text(size = 12))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_rect(size = 13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(12))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(11))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 10),
legend.title = element_text(10))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 10),
legend.title = element_text(size=10))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 10),
legend.title = element_text(size=13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
ggplot(tmp, aes(x= OR, y=power, col = factor(ne_prev)))+
geom_hline(aes(yintercept = 0.80, linetype = "80% power"), color = "black") +
scale_linetype_manual(name = "Reference line")+
geom_line()+
xlim(c(0,2.5))+
theme_grey()+
guides(color = guide_legend('Prevalence of MSI\nin unexposed'))+
theme(strip.text.x = element_text(size = 13),
axis.title.y = element_text(size = 13),
axis.title.x = element_text(size = 13),
legend.text = element_text(size = 12),
legend.title = element_text(size=13))+
scale_linetype_manual(name = "Reference line", values = c(2))+
labs(x= 'POR', y = "Power (1-\u03b2)")+
facet_wrap(~Sample)
version()
R.Version()
View(tmp)
# Necessary packages for analysis ; need to check if VA has issues with any of these
rm(list = ls())
library(tidyverse, warn.conflicts = T)
library(gtable)
library(gt)
library(gtsummary)
library(gtExtras)
library(kSamples)
#### Simulating data ####
# Dummy data for testing
data = data.frame(Patient_ID = 1:600,
Severity = sample(rep(c('Mild','Moderate', "Severe"), 200)),
Age = floor(runif(600, 18,100)),
Race = sample(rep(c(1,2,3,4), 150)),
Sex = sample(rep(c("Male", "Female"), 300)),
CCIS = floor(rlnorm(600, 1, 0.5)),
Cohort = ifelse(rbinom(600, size = 1, prob = 0.6)==1, "Out-patient", 'In-patient')
)
# generating symptoms with associations with severity
symptoms = data.frame(
SOB = factor(sample(c(rep("Yes", 7),rep('No',3)), size = 600, replace = T)),
Fatigue = factor(sample(c(rep("Yes", 7),rep('No',3)), size = 600, replace = T)),
Neuro = factor(sample(c(rep("Yes", 7),rep('No',3)), size = 600, replace = T))
)
# Generating vector of PBMC markers for re-naming if needed
cytokines = c('BDNF', 'EGF', 'Eotaxin', 'FGF-2', 'GM-CSF', 'GRO-α', 'HGF', 'IFN-α', 'IFN-γ',
'IL-1-α', 'IL-1-β', 'IL-1ra', 'IL-2', 'IL-4', 'IL-5', 'IL-6', 'IL-7', 'IL-8', 'IL-9',
'IL-10', 'IL', 'IL-12(p70)', 'IL-13', 'IL-15', 'IL-17a', 'IL-18', 'IL-21', 'IL-22',
'IL-23', 'IL-27', 'IL-31', 'IP-10', 'LIF', 'MCP-1', 'MIP-1-α', 'MIP-1-β', 'NGF-β',
'PDGF-bb', 'PlGF-1', 'RANTES', 'SCF', 'SDF-1-α', 'TNF-α', 'TNF-β', 'VEGF-a', 'VEGF-d')
for (i in cytokines){
conc = round(sqrt(rnorm(1, 100, 100)**2),3)*rnorm(600,1,0.5)
effect = rnorm(1, 1, 0.25)
conc2 = conc*effect*runif(600,0.1,2)
data[, paste0(i)] = conc
data[, paste0(i,"_2")] = conc2
}
ggplot(data= NULL, aes(x=data$`IFN-γ`, y=..density.., , fill = 'black'))+
geom_density(aes(fill = 'black'), alpha=0.5)+
geom_density(aes(x=data$`IFN-γ_2`, fill='blue'), col="blue", alpha = 0.5)+
geom_histogram(aes(x=data$`IFN-γ_2`, fill='blue'),position= 'identity',alpha=0.3 )+
geom_histogram(position= 'identity', fill='black',alpha=0.3)+
scale_fill_manual(name = 'Cytokine', values =
c('blue'='blue', 'black'='black'), labels=c('IFN-y day 1', 'IFN-y day 28'))+
theme_classic()+
labs(x = 'IFN-y')+
theme(legend.position=c(.9,.75))
#### Correlation plots ####
tmp = round(cor(data[,colnames(data) != c('Patient_ID','Severity','Age','Race','Sex','CCIS','Cohort')]),3)
# Custom melt function
long_cor = function(data){
num_rows = nrow(data)*ncol(data)
long_mat = data.frame(Rows= rep(NA, num_rows), Columns= rep(NA, num_rows), Correlation=rep(NA, num_rows))
long_mat[,1] = rep(rownames(data),ncol(data))
long_mat[,2] =rep(colnames(data), each = nrow(data))
long_mat[,3] =matrix(data, ncol = 1)
return(long_mat)
}
out = long_cor(tmp)
ggplot(out, aes(Rows, Columns, fill=Correlation)) +
geom_raster()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 5.5),
axis.text.y = element_text(size = 5.5)) +
labs(y = 'Day 0 Cytokines', x = "Day 28 Cytokines")
data_sub = data %>% select(
Severity,
Sex,
Age,
Race,
Cohort,
CCIS
)
data_sub$Race  = factor(data_sub$Race, labels =
c("Hispanic", "Non-Hispanic Black", "Non-Hispanic white", "Other"),
levels = c(1,2,3,4)
)
tab = tbl_summary(data_sub, by = 'Severity') %>% add_overall(last=T) %>% as_gt()
tab = tab %>% tab_spanner("Infection severity score", columns = c(6,7,8,9), gather = T, level = 1) %>%
tab_header("Table 1. Descriptive statistics of study participants. Categorical variables are summarized by counts and percentages. Continuous and discrete variables are summarized by their median and interquartile range.")
tab %>% tab_options(table.font.size = 9, heading.title.font.size = 10,
row_group.font.weight = 'bold',
column_labels.font.weight = 'bold',
row_group.background.color = "gray95",
column_labels.background.color = 'gray80', stub.border.width = 0,
data_row.padding.horizontal = 0)
plot(x = data$BDNF,
y = data$BDNF_2,
col = alpha('blue', alpha = 0.2),
pch = 19,
xlab = "BDNF Day 0",
ylab = "BDNF Day 28")
abline(a = 0, b = 1)
data_l = pivot_longer(data, names_to ='Cytokine', values_to = 'Levels', cols = !c(1:7))
plot(x = data$BDNF[data$Severity=="Mild"],
y = data$BDNF_2[data$Severity=="Mild"],
col = alpha('blue', alpha = 0.2),
pch = 19,
xlab = "BDNF Day 0",
ylab = "BDNF Day 28")
abline(a = 0, b = 1)
points(x = data$BDNF[data$Severity=="Moderate"],
y = data$BDNF_2[data$Severity=="Moderate"],
col = alpha('red', alpha = 0.2),
pch = 19)
points(x = data$BDNF[data$Severity=="Severe"],
y = data$BDNF_2[data$Severity=="Severe"],
col = alpha('green', alpha = 0.2),
pch = 19)
plot(x = data$BDNF[data$Severity=="Mild"],
y = data$BDNF_2[data$Severity=="Mild"],
col = alpha('blue', alpha = 0.2),
pch = 19,
xlab = "BDNF Day 0",
ylab = "BDNF Day 28")
points(x = data$BDNF[data$Severity=="Moderate"],
y = data$BDNF_2[data$Severity=="Moderate"],
col = alpha('red', alpha = 0.2),
pch = 19)
points(x = data$BDNF[data$Severity=="Severe"],
y = data$BDNF_2[data$Severity=="Severe"],
col = alpha('green', alpha = 0.2),
pch = 19)
abline(a = 0, b = 1)
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green'))
legend('topleft', c('Mild','Moderate','Severe'), col = c('blue','red','green'), )
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green'), )
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white' )
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n' )
plot(x = data$BDNF[data$Severity=="Mild"],
y = data$BDNF_2[data$Severity=="Mild"],
col = alpha('blue', alpha = 0.2),
pch = 19,
xlab = "BDNF Day 0",
ylab = "BDNF Day 28")
points(x = data$BDNF[data$Severity=="Moderate"],
y = data$BDNF_2[data$Severity=="Moderate"],
col = alpha('red', alpha = 0.2),
pch = 19)
points(x = data$BDNF[data$Severity=="Severe"],
y = data$BDNF_2[data$Severity=="Severe"],
col = alpha('green', alpha = 0.2),
pch = 19)
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n' )
abline(a = 0, b = 1)
plot(x = data$BDNF[data$Severity=="Mild"],
y = data$BDNF_2[data$Severity=="Mild"],
col = alpha('blue', alpha = 0.3),
pch = 19,
xlab = "BDNF Day 0",
ylab = "BDNF Day 28")
points(x = data$BDNF[data$Severity=="Moderate"],
y = data$BDNF_2[data$Severity=="Moderate"],
col = alpha('red', alpha = 0.3),
pch = 19)
points(x = data$BDNF[data$Severity=="Severe"],
y = data$BDNF_2[data$Severity=="Severe"],
col = alpha('green', alpha = 0.3),
pch = 19)
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n' )
abline(a = 0, b = 1)
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n' ,pch = 1)
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n' ,pch =1 )
plot(x = data$BDNF[data$Severity=="Mild"],
y = data$BDNF_2[data$Severity=="Mild"],
col = alpha('blue', alpha = 0.3),
pch = 19,
xlab = "BDNF Day 0",
ylab = "BDNF Day 28")
points(x = data$BDNF[data$Severity=="Moderate"],
y = data$BDNF_2[data$Severity=="Moderate"],
col = alpha('red', alpha = 0.3),
pch = 19)
points(x = data$BDNF[data$Severity=="Severe"],
y = data$BDNF_2[data$Severity=="Severe"],
col = alpha('green', alpha = 0.3),
pch = 19)
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n' ,pch =1 )
legend('topleft', c('Mild','Moderate','Severe'), fill = c('blue','red','green')
,border = 'white', bty = 'n')
data_l = pivot_longer(data, names_to ='Cytokine', values_to = 'Levels', cols = !c(1:7))
data_l$day = rep(c("Day 0","Day 28"),nrow(data_l)/2)
data_l$Cytokine = sub("_2", '', data_l$Cytokine)
# Set environment and load data
rm(list=ls())
library(tidyverse, warn.conflicts = F)
library(gt)
library(gtable)
library(gtsummary)
setwd('/Users/calenmendall/Desktop/UW_school_projects/Biost536/BIOST536_Extended_abstract/')
load(file = 'tbdata.RData')
## Add in household density measure
tbdata = tbdata %>% mutate(famSize = case_when(
famSize == "<4" ~ 1,
famSize == "4-6" ~ 2,
famSize == ">6" ~ 3
))
tbdata = tbdata %>% mutate(roomNo = case_when(
roomNo == "1" ~ 1,
roomNo == "2" ~ 2,
roomNo == "3+" ~ 3
))
tbdata = tbdata %>% mutate(householdDensity = round((famSize / roomNo),2))
## Select relevant subset of data to table
tbdata_sub = tbdata %>% select(
'Case'= case,
'Number of Windows in home' = windowNo,
"Sex" = male,
'Age'= age,
"Income" = income,
"Family Size" = famSize,
"Number of Rooms" = roomNo,
'Household density' = householdDensity,
"BCG Scar" = BCGscar,
"Household member with TB" = houseMemberTb
)
## Some transformations for the table
tbdata_sub$Sex = factor(tbdata_sub$Sex, labels = c('Female', 'Male'))
tbdata_sub$Case = factor(tbdata_sub$Case, labels = c('Control', 'Case'))
tbdata_sub$Income = factor(tbdata_sub$Income, labels= c('Low', 'Mid', 'High'), levels = c('low','mid','high'))
tbdata_sub$`Number of Rooms` = factor(tbdata_sub$`Number of Rooms`, labels= c('1', '2', '3+'), levels = c(1, 2, 3))
tbdata_sub$`Family Size` = factor(tbdata_sub$`Family Size`, labels= c('<4', '4-6', '>6'), levels = c(1, 2, 3))
tbdata_sub$`BCG Scar` = factor(tbdata_sub$`BCG Scar`, labels = c('No', 'Yes'))
tbdata_sub$`Household member with TB`= factor(tbdata_sub$`Household member with TB`, labels = c('No', 'Yes'))
## Generating the table and formatting
tab = tbl_summary(tbdata_sub, by = 'Case') %>% add_overall(last=T)%>% as_gt()
tab = tab %>% tab_spanner('Tuberculosis infection status', columns = c(6,7,8), gather = T, level = 1) %>%
tab_header("Table 1. Descriptive statistics of study participants. Categorical variables are summarized by counts and percentages. Continuous and discrete variables are summarized by their median and interquartile range.")
tab2 = tab %>% tab_options(table.font.size = 14, heading.title.font.size = 15,
row_group.font.weight = 'bold',
column_labels.font.weight = 'bold',
row_group.background.color = "gray95",
column_labels.background.color = 'gray80', stub.border.width = 0,
data_row.padding.horizontal = 0,
data_row.padding = 2)
tab2 = tab2 %>% cols_width(everything()~185)
tab2
